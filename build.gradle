plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.0.20'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.20'
    id 'application'
}

apply plugin: 'idea'

group = 'com.whalefrommars'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url = "https://jitpack.io" }
}

dependencies {
    implementation("net.dv8tion:JDA:${project.javaDiscordAPIVersion}")
    implementation("io.github.cdimascio:dotenv-kotlin:${project.dotEnvVersion}")
    implementation("com.adamratzman:spotify-api-kotlin-core:${project.kSpotifyWebAPIVersion}")
    implementation("com.github.wendykierp:JTransforms:${project.jTransformsVersion}")
    implementation("org.java-websocket:Java-WebSocket:${project.javaWebSocketVersion}")

    implementation("ch.qos.logback:logback-classic:${project.logbackClassicVersion}")
    implementation("io.github.oshai:kotlin-logging-jvm:${project.kotlinLoggingVersion}")

    testImplementation("org.jetbrains.kotlin:kotlin-test")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.3")
}

test {
    useJUnitPlatform()
}

kotlin {
    jvmToolchain(21)
}

application {
    mainClass = 'MainKt'
}

jar {
    manifest {
        attributes 'Main-Class': 'MainKt'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
